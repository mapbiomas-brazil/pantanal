/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-58.52936205752952, -16.48069309590335],
          [-58.57330737002952, -17.101247170160555],
          [-58.32062182315452, -17.478882098612424],
          [-57.96905932315452, -17.656938725904308],
          [-57.77130541690452, -17.897558502926692],
          [-57.67242846377952, -18.273525077010646],
          [-57.94708666690452, -19.23060191352147],
          [-58.24371752627952, -19.71741814896459],
          [-58.29864916690452, -20.274912605306977],
          [-57.99103197940452, -20.96383809400686],
          [-58.07892260440452, -21.578107423128746],
          [-58.10089526065452, -22.230467998199895],
          [-57.41974291690452, -22.26097380469566],
          [-57.32086596377952, -21.88427321684344],
          [-57.11212572940452, -21.49635339908078],
          [-56.98028979190452, -21.056141489602602],
          [-56.82648119815452, -20.45000902167834],
          [-56.38702807315452, -20.48088774020802],
          [-55.89264330752952, -20.50147010055191],
          [-55.65094408877952, -20.50147010055191],
          [-55.10162768252952, -19.44829624235093],
          [-54.68414721377952, -18.482045076276716],
          [-54.68414721377952, -17.792981029318906],
          [-54.80499682315452, -17.048736849002278],
          [-54.82696947940452, -16.522828344097242],
          [-55.06866869815452, -16.217140881812828],
          [-55.50812182315452, -15.847575770994556],
          [-56.00250658877952, -15.604348700492018],
          [-56.71661791690452, -15.93210807445483],
          [-57.29889330752952, -15.805296326997492],
          [-57.95807299502952, -15.535558114006925],
          [-58.973632404627836, -15.897400514355134],
          [-59.290155580858844, -16.315729569211467]]]),
    agua_para_savana = 
    /* color: #d63000 */
    /* shown: false */
    ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[-57.51945982267512, -19.163531416048965],
                  [-57.520489790936836, -19.20925104588084],
                  [-57.55141797612088, -19.244515527205973],
                  [-57.625154204016326, -19.247907093912765],
                  [-57.68528814391753, -19.206405692071332],
                  [-57.70146877980281, -19.215956608531116],
                  [-57.61573787700465, -19.276882778249487],
                  [-57.56278557643299, -19.262119418343477],
                  [-57.483890082055545, -19.194397405501498],
                  [-57.484405066186405, -19.154349275588487],
                  [-57.49333242093089, -19.080877718280203],
                  [-57.543799902612186, -19.1436465086073],
                  [-57.57298233669422, -19.13051034602618],
                  [-57.55444290798328, -19.158889633635447]]]),
            {
              "reference": 1,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-57.53978693311054, -18.27862802760933],
                  [-57.53274881665546, -18.275694006776877],
                  [-57.500476477788276, -18.28009501941617],
                  [-57.47970545117695, -18.290200625784145],
                  [-57.45841944043476, -18.319699105394637],
                  [-57.4469181281789, -18.317254670978837],
                  [-57.463569281743354, -18.273248951512524],
                  [-57.47335398022968, -18.26330537186076],
                  [-57.505454657719916, -18.24439469851246],
                  [-57.54922830884296, -18.25401331548367],
                  [-57.564162848637885, -18.30275031676587]]]),
            {
              "reference": 1,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-57.45740169191658, -18.13494988668322],
                  [-57.475981850606665, -18.095319938261643],
                  [-57.4916030359094, -18.077043812344524],
                  [-57.50155939577268, -18.07067935741778],
                  [-57.518897194844946, -18.06627306117791],
                  [-57.533166800955534, -18.038712552372242],
                  [-57.513168060754914, -18.039773042640366],
                  [-57.52801695964694, -18.012758055972636],
                  [-57.53005002122857, -17.98394425122915],
                  [-57.524764517430114, -17.975556995536845],
                  [-57.52806216586823, -17.96912911678482],
                  [-57.5336271193718, -17.955130406156304],
                  [-57.519284227123634, -17.969592599864512],
                  [-57.50287932210108, -17.97899162505615],
                  [-57.503887185916625, -17.975256464076335],
                  [-57.50796374351731, -17.96615289098615],
                  [-57.506589613848035, -17.93528584003119],
                  [-57.503027865447706, -17.92152623475142],
                  [-57.49970220786632, -17.91227802618283],
                  [-57.50186976463547, -17.906133275533836],
                  [-57.50294314292333, -17.900783310485963],
                  [-57.50950939508025, -17.892656288255363],
                  [-57.519035902330785, -17.87721861445319],
                  [-57.52418574363938, -17.875013065650602],
                  [-57.5540992514358, -17.847074022094173],
                  [-57.557209847639555, -17.84343820115084],
                  [-57.55980547935715, -17.848299245938644],
                  [-57.61900707703869, -17.82638590173986],
                  [-57.656257595837516, -17.804976640755964],
                  [-57.661064114392204, -17.77784365752805],
                  [-57.66209408265392, -17.747600237157897],
                  [-57.673916882424955, -17.744065556428023],
                  [-57.69329259407259, -17.745434459005416],
                  [-57.6935931439625, -17.759943397129344],
                  [-57.69046084932874, -17.766441591397285],
                  [-57.68664165955822, -17.7720405869482],
                  [-57.68192148603358, -17.794964294153342],
                  [-57.67857357484142, -17.817561021652566],
                  [-57.664090574778946, -17.86522463836687],
                  [-57.60640487306816, -17.940873497895627],
                  [-57.581498771354326, -18.016518156630802],
                  [-57.56523380982926, -18.046071183484464],
                  [-57.55832122329006, -18.06495283357927],
                  [-57.55269931319484, -18.071725479378543],
                  [-57.54960940840969, -18.07352059471441],
                  [-57.53347323897609, -18.076458016582684],
                  [-57.52506183150539, -18.078253083527798],
                  [-57.51390384200344, -18.075805260415038],
                  [-57.514933810265156, -18.097834439172523],
                  [-57.52111361983547, -18.105666369242595],
                  [-57.50875400069484, -18.123286931949043],
                  [-57.49381946089992, -18.127039230186757],
                  [-57.49107287886867, -18.11170324312166],
                  [-57.473735079796406, -18.099139785152108],
                  [-57.46781296450913, -18.11243722892536],
                  [-57.46596751632318, -18.115985907448124],
                  [-57.464980349571796, -18.11839250902632],
                  [-57.47030185225734, -18.123450077023296],
                  [-57.465237841637226, -18.13291223113969],
                  [-57.46347834091907, -18.134788280727605],
                  [-57.46189047504476, -18.13633804106493],
                  [-57.460002169640156, -18.136174924266193]]]),
            {
              "reference": 1,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-59.224595696347684, -15.352210001550098],
                  [-59.598130852597684, -15.415766097991677],
                  [-59.598130852597684, -15.775548107603486],
                  [-59.19419111550628, -15.638028710840976]]]),
            {
              "reference": 1,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-54.961900383847684, -22.374661769872986],
                  [-54.302720696347684, -22.293364331181163],
                  [-54.456529290097684, -21.98807859183464],
                  [-54.76379891746897, -22.17647825857753]]]),
            {
              "reference": 1,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-57.51002578699486, -17.986817721361643],
                  [-57.52779273950951, -17.993266842427936],
                  [-57.52650527918236, -18.011959797622158],
                  [-57.52427368128197, -18.018489620412154],
                  [-57.51268653833763, -18.03530279977244],
                  [-57.50127105677025, -18.04158692534339],
                  [-57.49354629480736, -18.043382348562137],
                  [-57.491658019660875, -18.036445384752703],
                  [-57.49182968103783, -18.030569154395533],
                  [-57.49680786096947, -18.026243470579313],
                  [-57.495863723396226, -18.020856621400895],
                  [-57.491143035530015, -18.01155167566248],
                  [-57.488911437629625, -18.00110343171853],
                  [-57.48951225244896, -17.994491332456573],
                  [-57.500927734016344, -17.98853206768425]]]),
            {
              "reference": 1,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-57.44587209075163, -18.147237511363763],
                  [-57.44956281035612, -18.148053123535952],
                  [-57.449219487602214, -18.15131553416724],
                  [-57.446215413505534, -18.15800328556513],
                  [-57.443211339408855, -18.16012373865383],
                  [-57.441923879081706, -18.16518009983021],
                  [-57.44115140288542, -18.168279087542942],
                  [-57.4390056356735, -18.168279087542942],
                  [-57.434714101249675, -18.16093929068022],
                  [-57.44200970977018, -18.1485424890126]]]),
            {
              "reference": 1,
              "system:index": "6"
            })]),
    agua_para_nao_veg = 
    /* color: #98ff00 */
    /* shown: false */
    ee.Geometry({
      "type": "GeometryCollection",
      "geometries": [
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -57.65739064446336,
                -19.190042615518298
              ],
              [
                -57.577911426934065,
                -19.320985584485058
              ],
              [
                -57.513362837325566,
                -19.263138919811873
              ],
              [
                -57.561428545380316,
                -19.232839336809423
              ],
              [
                -57.53551106682664,
                -19.21257613578636
              ],
              [
                -57.57688145867235,
                -19.182746929829445
              ],
              [
                -57.6204925224999,
                -19.013233841178444
              ],
              [
                -57.654815723809065,
                -19.10587942827558
              ],
              [
                -57.87119520583794,
                -19.129637812035146
              ],
              [
                -57.9139675609774,
                -19.21974359049349
              ],
              [
                -57.87526301452423,
                -19.20091815130389
              ],
              [
                -57.83657478476924,
                -19.15030910643756
              ],
              [
                -57.644686440096486,
                -19.167667778373307
              ]
            ]
          ],
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -59.092759758847684,
                -15.344264126641791
              ],
              [
                -59.664048821347684,
                -15.415766097991677
              ],
              [
                -59.290513665097684,
                -15.870678410123851
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        },
        {
          "type": "Polygon",
          "coordinates": [
            [
              [
                -54.830064446347684,
                -22.354341854073343
              ],
              [
                -54.302720696347684,
                -22.293364331181163
              ],
              [
                -54.434556633847684,
                -21.96770272515269
              ],
              [
                -54.802326860083824,
                -22.186576037807704
              ]
            ]
          ],
          "geodesic": true,
          "evenOdd": true
        }
      ],
      "coordinates": []
    });
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// FINAL ADJUSTMENTS BEFORE MAP INTEGRATION: pasture stabilization, agriculture increment,
// bump shadow adjustment, savanna trajectory filter, spatial filter

//define asset generated from last step 
var col8 = ee.Image('projects/mapbiomas-workspace/COLECAO8/classificacao-pantanal/PANT_col8_Anual_p16a_v_33');

var anos = [
            1985,1986, 1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,
            2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,
            2012, 2013,2014,2015,2016,2017,2018,2019,2020,2021,2022
            ];

// function to prevent regeneration in exotic pasture area within 7 years
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];
  var class_ano = col8.select('classification_'+ano);
  var class_corr = class_ano;
  if (ano >= 1992) {
    if (ano <= 1999) {
    var pasto_estavel = col8.select('classification_1990').eq(21)
                  .add(col8.select('classification_1991').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel);
    }
  }  if (ano >= 1993) {
    if (ano <= 2000) {
    var pasto_estavel1 = col8.select('classification_1991').eq(21)
                  .add(col8.select('classification_1992').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1994) {
    if (ano <= 2001) {
    var pasto_estavel2 = col8.select('classification_1992').eq(21)
                  .add(col8.select('classification_1993').eq(21));
    pasto_estavel2 = pasto_estavel2.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel2);
    }
  }
  if (ano >= 1995) {
    if (ano <= 2002) {
    var pasto_estavel = col8.select('classification_1993').eq(21)
                  .add(col8.select('classification_1994').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1996) {
    if (ano <= 2003) {
    var pasto_estavel1 = col8.select('classification_1994').eq(21)
                  .add(col8.select('classification_1995').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1997) {
    if (ano <= 2004) {
    var pasto_estavel = col8.select('classification_1995').eq(21)
                  .add(col8.select('classification_1996').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1998) {
    if (ano <= 2005) {
    var pasto_estavel1 = col8.select('classification_1996').eq(21)
                  .add(col8.select('classification_1997').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1999) {
    if (ano <= 2006) {
    var pasto_estavel = col8.select('classification_1997').eq(21)
                  .add(col8.select('classification_1998').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2000) {
    if (ano <= 2007) {
    var pasto_estavel1 = col8.select('classification_1998').eq(21)
                  .add(col8.select('classification_1999').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2001) {
    if (ano <= 2008) {
    var pasto_estavel = col8.select('classification_1999').eq(21)
                  .add(col8.select('classification_2000').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2002) {
    if (ano <= 2009) {
    var pasto_estavel1 = col8.select('classification_2000').eq(21)
                  .add(col8.select('classification_2001').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2003) {
    if (ano <= 2010) {
    var pasto_estavel = col8.select('classification_2001').eq(21)
                  .add(col8.select('classification_2002').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2004) {
    if (ano <= 2011) {
     var pasto_estavel1 = col8.select('classification_2002').eq(21)
                    .add(col8.select('classification_2003').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2005) {
    if (ano <= 2012) {
     var pasto_estavel = col8.select('classification_2003').eq(21)
                    .add(col8.select('classification_2004').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2006) {
    if (ano <= 2013) {
     var pasto_estavel1 = col8.select('classification_2004').eq(21)
                    .add(col8.select('classification_2005').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2007) {
    if (ano <= 2014) {
     var pasto_estavel = col8.select('classification_2005').eq(21)
                    .add(col8.select('classification_2006').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2008) {
    if (ano <= 2015) {
     var pasto_estavel1 = col8.select('classification_2006').eq(21)
                    .add(col8.select('classification_2007').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
  if (ano >= 2009) {
    if (ano <= 2016) {
     var pasto_estavel = col8.select('classification_2007').eq(21)
                    .add(col8.select('classification_2008').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2010) {
    if (ano <= 2017) {
     var pasto_estavel1 = col8.select('classification_2008').eq(21)
                    .add(col8.select('classification_2009').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2011) {
    if (ano <= 2018) {
     var pasto_estavel = col8.select('classification_2009').eq(21)
                    .add(col8.select('classification_2010').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2012) {
    if (ano <= 2019) {
     var pasto_estavel1 = col8.select('classification_2010').eq(21)
                    .add(col8.select('classification_2011').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2013) {
    if (ano <= 2020) {
     var pasto_estavel = col8.select('classification_2011').eq(21)
                    .add(col8.select('classification_2012').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2014) {
    if (ano <= 2021) {
     var pasto_estavel1 = col8.select('classification_2012').eq(21)
                    .add(col8.select('classification_2013').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2015) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2013').eq(21)
                    .add(col8.select('classification_2014').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2016) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2014').eq(21)
                    .add(col8.select('classification_2015').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2017) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2015').eq(21)
                    .add(col8.select('classification_2016').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2018) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2016').eq(21)
                    .add(col8.select('classification_2017').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2019) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2017').eq(21)
                    .add(col8.select('classification_2018').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2020) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2018').eq(21)
                    .add(col8.select('classification_2019').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2021) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2019').eq(21)
                    .add(col8.select('classification_2020').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  } 
  if (ano >= 2022) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2020').eq(21)
                    .add(col8.select('classification_2021').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  

  if (i_ano === 0){ var class_outTotal = class_corr}  
  else {class_outTotal = class_outTotal.addBands(class_corr)}
}

var col8 = class_outTotal;

for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];
  
  var class_ano = col8.select('classification_'+ano);
  var class_corr = class_ano;
  if (ano >= 1992) {
    if (ano <= 1999) {
    var pasto_estavel = col8.select('classification_1990').eq(21)
                  .add(col8.select('classification_1991').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel);
    }
  }  if (ano >= 1993) {
    if (ano <= 2000) {
    var pasto_estavel1 = col8.select('classification_1991').eq(21)
                  .add(col8.select('classification_1992').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1994) {
    if (ano <= 2001) {
    var pasto_estavel2 = col8.select('classification_1992').eq(21)
                  .add(col8.select('classification_1993').eq(21));
    pasto_estavel2 = pasto_estavel2.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel2);
    }
  }
  if (ano >= 1995) {
    if (ano <= 2002) {
    var pasto_estavel = col8.select('classification_1993').eq(21)
                  .add(col8.select('classification_1994').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1996) {
    if (ano <= 2003) {
    var pasto_estavel1 = col8.select('classification_1994').eq(21)
                  .add(col8.select('classification_1995').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1997) {
    if (ano <= 2004) {
    var pasto_estavel = col8.select('classification_1995').eq(21)
                  .add(col8.select('classification_1996').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1998) {
    if (ano <= 2005) {
    var pasto_estavel1 = col8.select('classification_1996').eq(21)
                  .add(col8.select('classification_1997').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 1999) {
    if (ano <= 2006) {
    var pasto_estavel = col8.select('classification_1997').eq(21)
                  .add(col8.select('classification_1998').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2000) {
    if (ano <= 2007) {
    var pasto_estavel1 = col8.select('classification_1998').eq(21)
                  .add(col8.select('classification_1999').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2001) {
    if (ano <= 2008) {
    var pasto_estavel = col8.select('classification_1999').eq(21)
                  .add(col8.select('classification_2000').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2002) {
    if (ano <= 2009) {
    var pasto_estavel1 = col8.select('classification_2000').eq(21)
                  .add(col8.select('classification_2001').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2003) {
    if (ano <= 2010) {
    var pasto_estavel = col8.select('classification_2001').eq(21)
                  .add(col8.select('classification_2002').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2004) {
    if (ano <= 2011) {
     var pasto_estavel1 = col8.select('classification_2002').eq(21)
                    .add(col8.select('classification_2003').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2005) {
    if (ano <= 2012) {
     var pasto_estavel = col8.select('classification_2003').eq(21)
                    .add(col8.select('classification_2004').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2006) {
    if (ano <= 2013) {
     var pasto_estavel1 = col8.select('classification_2004').eq(21)
                    .add(col8.select('classification_2005').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }
  if (ano >= 2007) {
    if (ano <= 2014) {
     var pasto_estavel = col8.select('classification_2005').eq(21)
                    .add(col8.select('classification_2006').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (ano >= 2008) {
    if (ano <= 2015) {
     var pasto_estavel1 = col8.select('classification_2006').eq(21)
                    .add(col8.select('classification_2007').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
  if (ano >= 2009) {
    if (ano <= 2016) {
     var pasto_estavel = col8.select('classification_2007').eq(21)
                    .add(col8.select('classification_2008').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2010) {
    if (ano <= 2017) {
     var pasto_estavel1 = col8.select('classification_2008').eq(21)
                    .add(col8.select('classification_2009').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2011) {
    if (ano <= 2018) {
     var pasto_estavel = col8.select('classification_2009').eq(21)
                    .add(col8.select('classification_2010').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2012) {
    if (ano <= 2019) {
     var pasto_estavel1 = col8.select('classification_2010').eq(21)
                    .add(col8.select('classification_2011').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2013) {
    if (ano <= 2020) {
     var pasto_estavel = col8.select('classification_2011').eq(21)
                    .add(col8.select('classification_2012').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2014) {
    if (ano <= 2021) {
     var pasto_estavel1 = col8.select('classification_2012').eq(21)
                    .add(col8.select('classification_2013').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2015) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2013').eq(21)
                    .add(col8.select('classification_2014').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2016) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2014').eq(21)
                    .add(col8.select('classification_2015').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2017) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2015').eq(21)
                    .add(col8.select('classification_2016').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2018) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2016').eq(21)
                    .add(col8.select('classification_2017').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2019) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2017').eq(21)
                    .add(col8.select('classification_2018').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2020) {
    if (ano <= 2022) {
     var pasto_estavel1 = col8.select('classification_2018').eq(21)
                    .add(col8.select('classification_2019').eq(21));
    pasto_estavel1 = pasto_estavel1.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }    
   if (ano >= 2021) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2019').eq(21)
                    .add(col8.select('classification_2020').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  } 
  if (ano >= 2022) {
    if (ano <= 2022) {
     var pasto_estavel = col8.select('classification_2020').eq(21)
                    .add(col8.select('classification_2021').eq(21));
    pasto_estavel = pasto_estavel.remap([2],[21]);
    class_corr = class_ano.blend(pasto_estavel).blend(pasto_estavel1);
    }
  }  
  if (i_ano === 0){ var class_outTotal2 = class_corr}  
  else {class_outTotal2 = class_outTotal2.addBands(class_corr)}

}

// agriculture increade filter

var imagem =  class_outTotal2;
var ano = 1986;
var maskagro = imagem.select('classification_1985').eq(19).remap([1],[19]);
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1986 = imagem.select('classification_'+ (ano)).neq(19)
               .and(imagem.select('classification_'+ (ano - 1)).eq(19));

mask1986 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1986);
maskagro = maskagro.blend(mask1986);
var pasto1986 = imagem_ano.blend(maskagro);

var ano = 1987;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1987 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1986.eq(19));
mask1987 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1987);
maskagro = maskagro.blend(mask1987);
var pasto1987 = imagem_ano.blend(maskagro);


var ano = 1988;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1988 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1987.eq(19));
mask1988 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1988);
maskagro = maskagro.blend(mask1988);
var pasto1988 = imagem_ano.blend(maskagro);

var ano = 1989;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1989 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1988.eq(19));
mask1989 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1989);
maskagro = maskagro.blend(mask1989);
var pasto1989 = imagem_ano.blend(maskagro);


var ano = 1990;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1990 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1989.eq(19));
mask1990 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1990);
maskagro = maskagro.blend(mask1990);
var pasto1990 = imagem_ano.blend(maskagro);


var ano = 1991;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1991 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1990.eq(19));
mask1991 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1991);
maskagro = maskagro.blend(mask1991);
var pasto1991 = imagem_ano.blend(maskagro);


var ano = 1992;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1992 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1991.eq(19));
mask1992 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1992);
maskagro = maskagro.blend(mask1992);
var pasto1992 = imagem_ano.blend(maskagro);


var ano = 1993;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1993 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1992.eq(19));
mask1993 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1993);
maskagro = maskagro.blend(mask1993);
var pasto1993 = imagem_ano.blend(maskagro);



var ano = 1994;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1994 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1993.eq(19));
mask1994 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1994);
maskagro = maskagro.blend(mask1994);
var pasto1994 = imagem_ano.blend(maskagro);



var ano = 1995;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1995 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1994.eq(19));
mask1995 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1995);
maskagro = maskagro.blend(mask1995);
var pasto1995 = imagem_ano.blend(maskagro);


var ano = 1996;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1996 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1995.eq(19));
mask1996 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1996);
maskagro = maskagro.blend(mask1996);
var pasto1996 = imagem_ano.blend(maskagro);


var ano = 1997;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1997 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1996.eq(19));
mask1997 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1997);
maskagro = maskagro.blend(mask1997);
var pasto1997 = imagem_ano.blend(maskagro);


var ano = 1998;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1998 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1997.eq(19));
mask1998 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1998);
maskagro = maskagro.blend(mask1998);
var pasto1998 = imagem_ano.blend(maskagro);


var ano = 1999;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask1999 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1998.eq(19));
mask1999 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask1999);
maskagro = maskagro.blend(mask1999);
var pasto1999 = imagem_ano.blend(maskagro);


var ano = 2000;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2000 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto1999.eq(19));
mask2000 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2000);
maskagro = maskagro.blend(mask2000);
var pasto2000 = imagem_ano.blend(maskagro);



var ano = 2001;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2001 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2000.eq(19));
mask2001 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2001);
maskagro = maskagro.blend(mask2001);
var pasto2001 = imagem_ano.blend(maskagro);


var ano = 2002;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2002 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2001.eq(19));
mask2002 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2002);
maskagro = maskagro.blend(mask2002);
var pasto2002 = imagem_ano.blend(maskagro);


var ano = 2003;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2003 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2002.eq(19));
mask2003 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2003);
maskagro = maskagro.blend(mask2003);
var pasto2003 = imagem_ano.blend(maskagro);


var ano = 2004;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2004 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2003.eq(19));
mask2004 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2004);
maskagro = maskagro.blend(mask2004);
var pasto2004 = imagem_ano.blend(maskagro);


var ano = 2005;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2005 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2004.eq(19));
mask2005 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2005);
maskagro = maskagro.blend(mask2005);
var pasto2005 = imagem_ano.blend(maskagro);


var ano = 2006;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2006 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2005.eq(19));
mask2006 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2006);
maskagro = maskagro.blend(mask2006);
var pasto2006 = imagem_ano.blend(maskagro);


var ano = 2007;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2007 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2006.eq(19));
mask2007 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2007);
maskagro = maskagro.blend(mask2007);
var pasto2007 = imagem_ano.blend(maskagro);


var ano = 2008;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2008 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2007.eq(19));
mask2008 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2008);
maskagro = maskagro.blend(mask2008);
var pasto2008 = imagem_ano.blend(maskagro);


var ano = 2009;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2009 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2008.eq(19));
mask2009 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2009);
maskagro = maskagro.blend(mask2009);
var pasto2009 = imagem_ano.blend(maskagro);


var ano = 2010;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2010 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2009.eq(19));
mask2010 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2010);
maskagro = maskagro.blend(mask2010);
var pasto2010 = imagem_ano.blend(maskagro);


var ano = 2011;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2011 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2010.eq(19));
mask2011 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2011);
maskagro = maskagro.blend(mask2011);
var pasto2011 = imagem_ano.blend(maskagro);


var ano = 2012;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2012 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2011.eq(19));
mask2012 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2012);
maskagro = maskagro.blend(mask2012);
var pasto2012 = imagem_ano.blend(maskagro);


var ano = 2013;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2013 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2012.eq(19));
mask2013 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2013);
maskagro = maskagro.blend(mask2013);
var pasto2013 = imagem_ano.blend(maskagro);


var ano = 2014;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2014 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2013.eq(19));
mask2014 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2014);
maskagro = maskagro.blend(mask2014);
var pasto2014 = imagem_ano.blend(maskagro);


var ano = 2015;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2015 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2014.eq(19));
mask2015 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2015);
maskagro = maskagro.blend(mask2015);
var pasto2015 = imagem_ano.blend(maskagro);


var ano = 2016;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2016 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2015.eq(19));
mask2016 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2016);
maskagro = maskagro.blend(mask2016);
var pasto2016 = imagem_ano.blend(maskagro);


var ano = 2017;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2017 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2016.eq(19));
mask2017 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2017);
maskagro = maskagro.blend(mask2017);
var pasto2017 = imagem_ano.blend(maskagro);


var ano = 2018;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2018 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2017.eq(19));
mask2018 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2018);
maskagro = maskagro.blend(mask2018);
var pasto2018 = imagem_ano.blend(maskagro);


var ano = 2019;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2019 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2018.eq(19));
mask2019 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2019);
maskagro = maskagro.blend(mask2019);
var pasto2019 = imagem_ano.blend(maskagro);


var ano = 2020;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2020 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2019.eq(19));
mask2020 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2020);
maskagro = maskagro.blend(mask2020);
var pasto2020 = imagem_ano.blend(maskagro);


var ano = 2021;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2021 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2020.eq(19));
mask2021 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2021);
maskagro = maskagro.blend(mask2021);
var pasto2021 = imagem_ano.blend(maskagro);


var ano = 2022;
var imagem_ano = imagem.select('classification_'+ (ano));
var  mask2022 = imagem.select('classification_'+ (ano)).neq(19)
               .and(pasto2021.eq(19));
mask2022 = imagem_ano.remap([3,4,11,12,19,21,33],[19,19,19,19,19,19,19]).updateMask(mask2022);
maskagro = maskagro.blend(mask2022);
var pasto2022 = imagem_ano.blend(maskagro);

var pasto_corrigido = imagem.select('classification_1985').addBands(pasto1986)
                                                          .addBands(pasto1987)
                                                          .addBands(pasto1988)
                                                          .addBands(pasto1989)
                                                          .addBands(pasto1990)
                                                          .addBands(pasto1991)
                                                          .addBands(pasto1992)
                                                          .addBands(pasto1993)
                                                          .addBands(pasto1994)
                                                          .addBands(pasto1995)
                                                          .addBands(pasto1996)
                                                          .addBands(pasto1997)
                                                          .addBands(pasto1998)
                                                          .addBands(pasto1999)
                                                          .addBands(pasto2000)
                                                          .addBands(pasto2001)
                                                          .addBands(pasto2002)
                                                          .addBands(pasto2003)
                                                          .addBands(pasto2004)
                                                          .addBands(pasto2005)
                                                          .addBands(pasto2006)
                                                          .addBands(pasto2007)
                                                          .addBands(pasto2008)
                                                          .addBands(pasto2009)
                                                          .addBands(pasto2010)
                                                          .addBands(pasto2011)
                                                          .addBands(pasto2012)
                                                          .addBands(pasto2013)
                                                          .addBands(pasto2014)
                                                          .addBands(pasto2015)
                                                          .addBands(pasto2016)
                                                          .addBands(pasto2017)
                                                          .addBands(pasto2018)
                                                          .addBands(pasto2019)
                                                          .addBands(pasto2020)
                                                          .addBands(pasto2021)
                                                          .addBands(pasto2022);

// bump shadow adjustment
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];
    var col8_ano = pasto_corrigido.select('classification_'+ano);
    var col8_ano_sav = pasto_corrigido.select('classification_'+ano).remap([33],[4]).rename('classification_'+ano).clip(agua_para_savana);
    var col8_ano_camp = pasto_corrigido.select('classification_'+ano).remap([11],[12]).rename('classification_'+ano).clip(agua_para_savana);
    var col8_ano_camp1 = pasto_corrigido.select('classification_'+ano).remap([11],[12]).rename('classification_'+ano).clip(agua_para_nao_veg);
    var col8_ano_out = pasto_corrigido.select('classification_'+ano).remap([33],[25]).rename('classification_'+ano).clip(agua_para_nao_veg);
    var col8_corr = pasto_corrigido.blend(col8_ano_sav).blend(col8_ano_out).blend(col8_ano_camp).blend(col8_ano_camp1);
  if (i_ano === 0){ var class_final = col8_corr}  
  else {class_final = class_final.addBands(col8_corr)}
}

//// remap 21 to 15 and 19 to 41 (integration settings)
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];

var col8_ano = class_final.select('classification_'+ano);
var col8_ano_agro = class_final.select('classification_'+ano).remap([19],[41]).rename('classification_'+ano).clip(geometry);
var col8_ano_past = class_final.select('classification_'+ano).remap([21],[15]).rename('classification_'+ano).clip(geometry);
var col8_corr2 = col8_ano.blend(col8_ano_agro).blend(col8_ano_past);
if (i_ano === 0){ var class_final2 = col8_corr2}  
  else {class_final2 = class_final2.addBands(col8_corr2)}

}

// fixes false savanna transitions based on mode and pixel trajectory over the time series
var col8 = class_final2;

var colModa = ee.ImageCollection([ 
  col8.select('classification_1985').rename('class'),
  col8.select('classification_1986').rename('class'),
  col8.select('classification_1987').rename('class'),
  col8.select('classification_1988').rename('class'),
  col8.select('classification_1989').rename('class'),
  col8.select('classification_1990').rename('class'),
  col8.select('classification_1991').rename('class'),
  col8.select('classification_1992').rename('class'),
  col8.select('classification_1993').rename('class'),
  col8.select('classification_1994').rename('class'),
  col8.select('classification_1995').rename('class'),
  col8.select('classification_1996').rename('class'),
  col8.select('classification_1997').rename('class'),
  col8.select('classification_1998').rename('class'),
  col8.select('classification_1999').rename('class'),
  col8.select('classification_2000').rename('class'),
  col8.select('classification_2001').rename('class'),
  col8.select('classification_2002').rename('class'),
  col8.select('classification_2003').rename('class'),
  col8.select('classification_2004').rename('class'),
  col8.select('classification_2005').rename('class'),
  col8.select('classification_2006').rename('class'),
  col8.select('classification_2007').rename('class'),
  col8.select('classification_2008').rename('class'),
  col8.select('classification_2009').rename('class'),
  col8.select('classification_2010').rename('class'),
  col8.select('classification_2011').rename('class'),
  col8.select('classification_2012').rename('class'),
  col8.select('classification_2013').rename('class'),
  col8.select('classification_2014').rename('class'),
  col8.select('classification_2015').rename('class'),
  col8.select('classification_2016').rename('class'),
  col8.select('classification_2017').rename('class'),
  col8.select('classification_2018').rename('class'),
  col8.select('classification_2019').rename('class'),
  col8.select('classification_2020').rename('class'),
  col8.select('classification_2021').rename('class'),
  col8.select('classification_2022').rename('class'),
  ]).mode();

//auxiliarAssets
var trajetoriasav = ee.Image('users/gee_arcplan/col8/trajectories_4_v2');
var npresencesav = ee.Image('users/gee_arcplan/col8/number_of_presence_4_v2');
var nchangesav = ee.Image('users/gee_arcplan/col8/number_of_changes_4_v2');

var maskSavana = trajetoriasav.eq(6).and(colModa.neq(4)).remap([1],[100]).toByte().selfMask();

for (var i_ano=0;i_ano<anos.length; i_ano++){
    var ano = anos[i_ano];

var class_corr_agr_ano = col8.select('classification_'+ano).add(maskSavana)
                         .remap([3, 4, 11, 12, 15, 25, 33, 41, 103, 104, 111, 112, 115, 125, 133],
                                [3, 4, 11, 12, 15, 25, 33, 41,   3,  12,  11,  12,  15,  25,  33]);

var saida_ano = col8.select('classification_'+ano).blend(class_corr_agr_ano.rename('classification_'+ano));

   if (i_ano === 0){ var class_outTotal = saida_ano}  
  else {class_outTotal = class_outTotal.addBands(saida_ano)}
}

var mask87 = class_outTotal.select('classification_1985').eq(4)
            .and(class_outTotal.select('classification_1987').neq(15))
            .and(trajetoriasav.eq(1).and(npresencesav.eq(2).and(nchangesav.eq(1)))).remap([1],[100]).toByte().selfMask();

for (var i_ano=0;i_ano<anos.length; i_ano++){
    var ano = anos[i_ano];
    var class_corr_agr_ano = class_outTotal.select('classification_'+ano).add(mask87)
                         .remap([3, 4, 11, 12, 15, 25, 33, 41, 103, 104, 111, 112, 115, 125, 133],
                                [3, 4, 11, 12, 15, 25, 33, 41,   3,  12,  11,  12,  15,  25,  33]);

var saida_ano = class_outTotal.select('classification_'+ano).blend(class_corr_agr_ano.rename('classification_'+ano));

   if (i_ano === 0){ var class_outTotal2 = saida_ano}  
  else {class_outTotal2 = class_outTotal2.addBands(saida_ano)}
}

// spatial and final filter
var class8 = class_outTotal2;
var class4GAP = class_outTotal2;

var VeightConnected = true;
var min_connect_pixel = 6;
for (var i_ano=0;i_ano<anos.length; i_ano++){  
  var ano = anos[i_ano]; 
  
  var moda = class4GAP.select('classification_'+ano).focal_mode(2, 'square', 'pixels');
  var connected = class4GAP.select('classification_'+ano).connectedPixelCount(10,true).reproject('epsg:4326', null, 30);
  moda = moda.mask(connected.lte(min_connect_pixel));
  var class_out = class4GAP.select('classification_'+ano).blend(moda);
  if (i_ano === 0){ var class_outTotal = class_out }  
  else {class_outTotal = class_outTotal.addBands(class_out); }
 // Map.addLayer(class8.select('classification_'+ano), vis, 'original '+ano,false);
//Map.addLayer(class_outTotal.select('classification_'+ano), vis, 'class4 MODA '+ano,false);
}

// set output file
var vesion_in = '33';
var version_out = '38';
var descricao = 'Final asset for integration';
var col = 8.0;
var prefixo_in = 'PANT_col8_Anual_p16a_v';
var prefixo_out = 'PANT_col8_Anual_p20f_v';
var dirout = 'projects/mapbiomas-workspace/COLECAO8/classificacao-pantanal/';

class_outTotal = class_outTotal
.set('territory', 'PANTANAL')
.set('biome', 'PANTANAL')
.set('source', 'arcplan')
.set('version', version_out)
.set('year', version_out)
.set('collection_id', col)
.set('description', descricao);

// export image
  print('Final export:',class_outTotal);
  Export.image.toAsset({
    "image": class_outTotal.toByte(),
    "description": prefixo_out+version_out,
    "assetId": dirout + prefixo_out+version_out,
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": geometry
  });    

//Marcos Rosa, Eduardo Rosa, Mariana Dias
//Updated Jul 31, 2024 - MD - mariana@arcplan.com.br
