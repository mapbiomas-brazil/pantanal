/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-58.52936205752952, -16.48069309590335],
          [-58.57330737002952, -17.101247170160555],
          [-58.32062182315452, -17.478882098612424],
          [-57.96905932315452, -17.656938725904308],
          [-57.77130541690452, -17.897558502926692],
          [-57.67242846377952, -18.273525077010646],
          [-57.94708666690452, -19.23060191352147],
          [-58.24371752627952, -19.71741814896459],
          [-58.29864916690452, -20.274912605306977],
          [-57.99103197940452, -20.96383809400686],
          [-58.07892260440452, -21.578107423128746],
          [-58.10089526065452, -22.230467998199895],
          [-57.41974291690452, -22.26097380469566],
          [-57.32086596377952, -21.88427321684344],
          [-57.11212572940452, -21.49635339908078],
          [-56.98028979190452, -21.056141489602602],
          [-56.82648119815452, -20.45000902167834],
          [-56.38702807315452, -20.48088774020802],
          [-55.89264330752952, -20.50147010055191],
          [-55.65094408877952, -20.50147010055191],
          [-55.10162768252952, -19.44829624235093],
          [-54.68414721377952, -18.482045076276716],
          [-54.68414721377952, -17.792981029318906],
          [-54.80499682315452, -17.048736849002278],
          [-54.82696947940452, -16.522828344097242],
          [-55.06866869815452, -16.217140881812828],
          [-55.50812182315452, -15.847575770994556],
          [-56.00250658877952, -15.604348700492018],
          [-56.71661791690452, -15.93210807445483],
          [-57.29889330752952, -15.805296326997492],
          [-57.95807299502952, -15.535558114006925],
          [-58.973632404627836, -15.897400514355134],
          [-59.290155580858844, -16.315729569211467]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// This script blend the classified image for each region

// Define the list of years for processing
var anos = [1985,1986,1987,1988, 2021,2022,2023]
// Define the list of years for processing
var anos = [  1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,
              2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,
              2015,2016,2017,2018,2019,2020,2021,2022,2023];

// Load the palettes module and define visualization parameters
var palettes = require('users/mapbiomas/modules:Palettes.js');
var vis = {
    'min': 0,
    'max': 62,
    'palette': palettes.get('classification7')
};

// Define the geometry, biome, and output directory
var limite = geometry
var bioma = 'PANTANAL'

var dirout = 'projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/';

// Load the biomes image and mask it to the Pantanal biome
var biomes = ee.Image('projects/mapbiomas-workspace/AUXILIAR/biomas-raster-41');
var bioma250mil_PANT = biomes.mask(biomes.eq(3));
Map.addLayer(bioma250mil_PANT,{},'Bioma',false);

// Load the GEDI image and rename it
var GEDI = ee.Image('users/potapovpeter/GEDI_V27/GEDI_SAM_v27').rename('GEDI');

// Define visualization parameters for the GEDI image
var imageVisGEDI = {"min": 0,"max": 15,"palette":["c9f5f1","#ffbeee","#daffe0","#c0debf","08ff04","#037e07","0b240a"]};
Map.addLayer(GEDI.clip(limite), imageVisGEDI,'GEDI', false);

// Load the stable map from Collection 8
var mapa_estavel_col71 = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/SAMPLES/PANT_amostras_estaveis85a22_col8_v1')
Map.addLayer(mapa_estavel_col71, vis, 'mapa_estavel_col8', false);

// Load the Collection 8 classification image
var col8_class = ee.Image('projects/mapbiomas-workspace/COLECAO8/classificacao-pantanal/PANT_col8_Anual_p08b_v4')

// Define the asset path for the Collection 8 mosaics
var asset_mosaicos_col8 = 'projects/nexgenmap/MapBiomas2/LANDSAT/BRAZIL/mosaics-2';

// Define feature collections for different regions and sub-regions
var sub_bac = ee.FeatureCollection('users/gee_arcplan/col7/SUBBACIAS_pantanal')
var sub_reg = ee.FeatureCollection('users/gee_arcplan/col7/sub_reg_pantanal')
var sistDep = ee.FeatureCollection('users/gee_arcplan/sist_dep_pantanal')
var altoParaguai = sub_bac.filter(ee.Filter.eq('name', 'Alto Paraguai'))
var taquari = sub_bac.filter(ee.Filter.eq('name', 'Taquari'))
var megaLeque = sistDep.filter(ee.Filter.eq('Nivel_1','Megaleque do Taquari'))
var baixoParaguai = sub_bac.filter(ee.Filter.eq('name', 'Baixo Paraguai'))
var caceres = sub_reg.filter(ee.Filter.eq('SPRCLASSE', 'Cáceres'))
var barao = sub_reg.filter(ee.Filter.eq('SPRCLASSE', 'Barão de Melgaço'))
var pocone = sub_reg.filter(ee.Filter.eq('SPRCLASSE', 'Poconé'))
var taquari_edit = ee.FeatureCollection('users/gee_arcplan/col7/taquari_editado')  
var miranda = ee.FeatureCollection('users/gee_arcplan/micro_reg_hidr_miranda')

// Display the regions
//Map.addLayer(sub_bac)
//Map.addLayer(sub_reg)
//Map.addLayer(sistDep)
//Map.addLayer(ee.FeatureCollection('users/gee_arcplan/col7/reg_agro'))
//Map.addLayer(miranda)

// Define regions for visualization
var reg0 = geometry
var reg1 = baixoParaguai
var reg2 = taquari_edit
var reg3 = barao
var reg4 = caceres
var reg5 = pocone
var reg6 = miranda

// Load the classified images for each region
var reg0_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_reg0_v2')//.select('classification_2020')//.clip(reg0)
var reg1_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg1_v1').clip(reg1)//.select('classification_2020')
var reg2_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg2_v1').clip(reg2)//.select('classification_2020')
var reg3_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg3_v2').clip(reg3)//.select('classification_2020')
var reg4_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg4_v1').clip(reg4)//.select('classification_2020')
var reg5_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg5_v2').clip(reg5)//.select('classification_2020')
var reg6_class = ee.Image('projects/mapbiomas-workspace/AMOSTRAS/col9/PANTANAL/PANT_col9_prob_reg6_v2').clip(reg6)//.select('classification_2020')

// Create a mosaic of the classified images for regions 1-6
var teste3 = ee.ImageCollection([reg1_class,reg2_class,reg3_class,reg4_class,reg5_class,reg6_class]).mosaic()

// Blend the classified image for region 0 with the mosaic
var versao3 = reg0_class.blend(teste3).toInt8()

// Loop through each year and process the data
for (var i_ano=0;i_ano<anos.length; i_ano++){
  var ano = anos[i_ano];

  // Create a mosaic for the current year
  var mosaicoTotal = ee.ImageCollection(asset_mosaicos_col8)
                        .filterMetadata('biome', 'equals', bioma)
                        .filterMetadata('year', 'equals', ano)
 //                       .filter(ee.Filter.eq('satellite', asset1))
                        .filterBounds(geometry)
                        .mosaic()

  // Display the mosaic
  Map.addLayer(mosaicoTotal, {bands: ['swir1_median', 'nir_median', 'red_median'],gain: [0.08, 0.06, 0.2],gamma: 0.85}, 'mosaico '+ ano, false) 

  // Display the Collection 8 classification for the current year
  var teste = col8_class.select('classification_'+ano)
  Map.addLayer(teste, vis, 'Col8 '+ano, false) 

  // Display the Collection 9 classification for the current year
  var teste3 = versao3.select('classification_'+ano)
  Map.addLayer(teste3, vis, 'Col9 v2 '+ano, false)

  // Display the Collection 9 classification (version 1) for the current year
  Map.addLayer(ee.Image('projects/mapbiomas-workspace/COLECAO9/classificacao-pantanal/PANT_col9_Anual_p02b_v1').select('classification_'+ano), vis, 'Col9 v1 '+ano, false)
}

// Display the final Collection 9 classification
Map.addLayer(versao3, {}, 'Col9 '+ano, false)

// Display the regions
Map.addLayer(ee.Image().paint(reg0, 0, 3).toByte().clip(geometry),{},'reg0',false)
Map.addLayer(ee.Image().paint(reg1, 0, 3).toByte().clip(geometry),{},'reg1',false)
Map.addLayer(ee.Image().paint(reg2, 0, 3).toByte().clip(geometry),{},'reg2',false)
Map.addLayer(ee.Image().paint(reg3, 0, 3).toByte().clip(geometry),{},'reg3',false)
Map.addLayer(ee.Image().paint(reg4, 0, 3).toByte().clip(geometry),{},'reg4',false)
Map.addLayer(ee.Image().paint(reg5, 0, 3).toByte().clip(geometry),{},'reg5',false)
Map.addLayer(ee.Image().paint(reg6, 0, 3).toByte().clip(geometry),{},'reg6',false)

// Define variables for exporting the image
var vesion_in = '0'
var version_out = 'p02b_v02';
var descricao = 'classificacao bruta, sem filtro, classes 3-4-12-19-21-33'
var col = 9.0
var prefixo_in = 'PANT_col9_Anual_'
var prefixo_out = 'PANT_col9_Anual_'
var dirout = 'projects/mapbiomas-workspace/COLECAO9/classificacao-pantanal/';

// Set metadata for the classified image
versao3 = versao3
.set('territory', 'PANTANAL')
.set('biome', 'PANTANAL')
.set('source', 'arcplan')
.set('version', version_out)
.set('year', version_out)
.set('collection_id', col)
.set('description', descricao)

// Export the classified image to an asset
Export.image.toAsset({
    "image": versao3,
    "description": prefixo_out+version_out,
    "assetId": dirout + prefixo_out+version_out,
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": geometry
  }); 
  
//Developed by ArcPlan Team
//Marcos Rosa, Eduardo Rosa, Mariana Dias
//Updated July 2024 - MD - mariana@arcplan.com.br